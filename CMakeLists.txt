cmake_minimum_required(VERSION 3.16)
project(LeetCode_Solutions)

set(CMAKE_CXX_STANDARD 17)

add_executable(main main.cpp)
add_executable(DisjointSet DisjointSet.cpp)
add_executable(functions functions.cpp)
add_executable(206_Reverse_Linked_List "206. Reverse Linked List.cpp")
add_executable(2130_Maximum_Twin_Sum_of_a_Linked_List "2130. Maximum Twin Sum of a Linked List.cpp")
add_executable(2095_Delete_the_Middle_Node_of_a_Linked_List "2095. Delete the Middle Node of a Linked List.cpp")
add_executable(876_Middle_of_the_Linked_List "876. Middle of the Linked List.cpp")
add_executable(202_Happy_Number "202. Happy Number.cpp")
add_executable(142_Linked_List_Cycle_II "142. Linked List Cycle II.cpp")
add_executable(141_Linked_List_Cycle "141. Linked List Cycle.cpp")
add_executable(1750_Minimum_Length_of_String_After_Deleting_Similar_Ends "1750. Minimum Length of String After Deleting Similar Ends.cpp")
add_executable(409_Longest_Palindrome "409. Longest Palindrome.cpp")
add_executable(3005_Count_Elements_With_Maximum_Frequency "3005. Count Elements With Maximum Frequency.cpp")
add_executable(948_Bag_of_Tokens "948. Bag of Tokens.cpp")
add_executable(19_Remove_Nth_Node_From_End_of_List "19. Remove Nth Node From End of List.cpp")
add_executable(15_3Sum "15. 3Sum")
add_executable(2798_Number_of_Employees_Who_Met_the_Target "2798. Number of Employees Who Met the Target")
add_executable(100_Same_Tree "100. Same Tree")
add_executable(2864_Maximum_Odd_Binary_Number "2864. Maximum Odd Binary Number")
add_executable(1609_Even_Odd_Tree "1609. Even Odd Tree")
add_executable(513_Find_Bottom_Left_Tree_Value "513. Find Bottom Left Tree Value")
add_executable(2092_Find_All_People_With_Secret "2092. Find All People With Secret")
add_executable(787_Cheapest_Flights_Within_K_Stops "787. Cheapest Flights Within K Stops")
add_executable(2709_Greatest_Common_Divisor_Traversal "2709. Greatest Common Divisor Traversal")
add_executable(997_Find_the_Town_Judge "997. Find the Town Judge")
add_executable(201_Bitwise_AND_of_Numbers_Range "201. Bitwise AND of Numbers Range")
add_executable(5_Longest_Palindromic_Substring "5. Longest Palindromic Substring")
add_executable(268_Missing_Number "268. Missing Number")
add_executable(3_Longest_Substring_Without_Repeating_Characters "3. Longest Substring Without Repeating Characters")
add_executable(2402_Meeting_Rooms_III "2402. Meeting Rooms III")
add_executable(231_Power_of_Two "231. Power of Two")
add_executable(1642_Furthest_Building_You_Can_Reach "1642. Furthest Building You Can Reach")
add_executable(1481_Least_Number_of_Unique_Integers_after_K_Removals "1481. Least Number of Unique Integers after K Removals")
add_executable(169_Majority_Element "169. Majority Element")
add_executable(647_Palindromic_Substrings "647. Palindromic Substrings")
add_executable(2_Add_Two_Numbers "2. Add Two Numbers")
add_executable(4_Median_of_Two_Sorted_Arrays "4. Median of Two Sorted Arrays")
add_executable(1_Two_Sum "1. Two Sum")
add_executable(172_Factorial_Trailing_Zeroes "172. Factorial Trailing Zeroes")
add_executable(9_Palindrome_Number "9. Palindrome Number")
add_executable(2149_Rearrange_Array_Elements_by_Sign "2149. Rearrange Array Elements by Sign")
add_executable(2108_Find_First_Palindromic_String_in_the_Array "2108. Find First Palindromic String in the Array")
add_executable(2540_Minimum_Common_Value "2540. Minimum Common Value")
add_executable(349_Intersection_of_Two_Arrays "349. Intersection of Two Arrays")
add_executable(350_Intersection_of_Two_Arrays_II "350. Intersection of Two Arrays II")
add_executable(3002_Maximum_Size_of_a_Set_After_Removals "3002. Maximum Size of a Set After Removals")
add_executable(344_Reverse_String "344. Reverse String")
add_executable(263_Ugly_Number "263. Ugly Number")
add_executable(264_Ugly_Number_II "264. Ugly Number II")
add_executable(791_Custom_Sort_String "791. Custom Sort String")
add_executable(2545_Sort_the_Students_by_Their_Kth_Score "2545. Sort the Students by Their Kth Score")
add_executable(1171_Remove_Zero_Sum_Consecutive_Nodes_from_Linked_List "1171. Remove Zero Sum Consecutive Nodes from Linked List")
add_executable(2485_Find_the_Pivot_Integer "2485. Find the Pivot Integer")
add_executable(930_Binary_Subarrays_With_Sum "930. Binary Subarrays With Sum")
add_executable(238_Product_of_Array_Except_Self "238. Product of Array Except Self")
add_executable(525_Contiguous_Array "525. Contiguous Array")
add_executable(57_Insert_Interval "57. Insert Interval")
add_executable(621_Task_Scheduler "621. Task Scheduler")
add_executable(1669_Merge_In_Between_Linked_Lists "1669. Merge In Between Linked Lists")
add_executable(92_Reverse_Linked_List_II "92. Reverse Linked List II")
add_executable(234_Palindrome_Linked_List "234. Palindrome Linked List")
add_executable(143_Reorder_List "143. Reorder List")
add_executable(287_Find_the_Duplicate_Number "287. Find the Duplicate Number")
add_executable(645_Set_Mismatch "645. Set Mismatch")
add_executable(442_Find_All_Duplicates_in_an_Array "442. Find All Duplicates in an Array")
add_executable(41_First_Missing_Positive "41. First Missing Positive")
add_executable(713_Subarray_Product_Less_Than_K "713. Subarray Product Less Than K")
add_executable(2958_Length_of_Longest_Subarray_With_at_Most_K_Frequency "2958. Length of Longest Subarray With at Most K Frequency")
add_executable(2962_Count_Subarrays_Where_Max_Element_Appears_at_Least_K_Times "2962. Count Subarrays Where Max Element Appears at Least K Times")
add_executable(2444_Count_Subarrays_With_Fixed_Bounds "2444. Count Subarrays With Fixed Bounds")
add_executable(58_Length_of_Last_Word "58. Length of Last Word")
add_executable(205_Isomorphic_Strings "205. Isomorphic Strings")
add_executable(79_Word_Search "79. Word Search")
add_executable(1614_Maximum_Nesting_Depth_of_the_Parentheses "1614. Maximum Nesting Depth of the Parentheses")
add_executable(1544_Make_The_String_Great "1544. Make The String Great")
add_executable(75_Sort_Colors "75. Sort Colors")
add_executable(1249_Minimum_Remove_to_Make_Valid_Parentheses "1249. Minimum Remove to Make Valid Parentheses")
add_executable(678_Valid_Parenthesis_String "678. Valid Parenthesis String")
add_executable(1700_Number_of_Students_Unable_to_Eat_Lunch "1700. Number of Students Unable to Eat Lunch")
add_executable(2073_Time_Needed_to_Buy_Tickets "2073. Time Needed to Buy Tickets")
add_executable(950_Reveal_Cards_In_Increasing_Order "950. Reveal Cards In Increasing Order")
add_executable(402_Remove_K_Digits "402. Remove K Digits")
add_executable(42_Trapping_Rain_Water "42. Trapping Rain Water")
add_executable(85_Maximal_Rectangle "85. Maximal Rectangle")
add_executable(404_Sum_of_Left_Leaves "404. Sum of Left Leaves")
add_executable(129_Sum_Root_to_Leaf_Numbers "129. Sum Root to Leaf Numbers")
add_executable(623_Add_One_Row_to_Tree "623. Add One Row to Tree")
add_executable(988_Smallest_String_Starting_From_Leaf "988. Smallest String Starting From Leaf")
add_executable(463_Island_Perimeter "463. Island Perimeter")
add_executable(200_Number_of_Islands "200. Number of Islands")
add_executable(1992_Find_All_Groups_of_Farmland "1992. Find All Groups of Farmland")
add_executable(1971_Find_if_Path_Exists_in_Graph "1971. Find if Path Exists in Graph")
add_executable(752_Open_the_Lock "752. Open the Lock")
add_executable(310_Minimum_Height_Trees "310. Minimum Height Trees")
add_executable(1137_N_th_Tribonacci_Number "1137. N-th Tribonacci Number")
add_executable(2370_Longest_Ideal_Subsequence "2370. Longest Ideal Subsequence")
add_executable(1289_Minimum_Falling_Path_Sum_II "1289. Minimum Falling Path Sum II")
add_executable(514_Freedom_Trail "514. Freedom Trail")
add_executable(834_Sum_of_Distances_in_Tree "834. Sum of Distances in Tree")
add_executable(2997_Minimum_Number_of_Operations_to_Make_Array_XOR_Equal_to_K "2997. Minimum Number of Operations to Make Array XOR Equal to K")
add_executable(1915_Number_of_Wonderful_Substrings "1915. Number of Wonderful Substrings")
add_executable(2000_Reverse_Prefix_of_Word "2000. Reverse Prefix of Word")
add_executable(213_House_Robber_II "213. House Robber II")
add_executable(2441_Largest_Positive_Integer_That_Exists_With_Its_Negative "2441. Largest Positive Integer That Exists With Its Negative")
add_executable(165_Compare_Version_Numbers "165. Compare Version Numbers")
add_executable(881_Boats_to_Save_People "881. Boats to Save People")